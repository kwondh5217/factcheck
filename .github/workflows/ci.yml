name: CI

on:
  pull_request:
    branches:
      - '**'
  workflow_dispatch:

concurrency:
  group: pr-${{ github.event.pull_request.number }}
  cancel-in-progress: true

jobs:
  ktlint:
    name: Kotlin Lint
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17.0.6

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Run ktlint check
        run: ./gradlew ktlintCheck

  test-build:
    name: Test and Build
    runs-on: ubuntu-latest
    needs: ktlint
    env:
      JWT_SECRET: ${{ secrets.EC2_DEPLOY_JWT_SECRET }}
      CHROME_CLIENT_ID: ${{ secrets.EC2_DEPLOY_CLIENT_ID }}
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up JDK 17
        uses: actions/setup-java@v3
        with:
          distribution: 'temurin'
          java-version: 17.0.6

      - name: Cache Gradle
        uses: actions/cache@v3
        with:
          path: |
            ~/.gradle/caches
            ~/.gradle/wrapper
          key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}

      - name: Copy compose file
        run: cp ./tools/docker-compose.yml ./docker-compose.yml

      - name: Login to Docker Hub (for compose pull)
        uses: docker/login-action@v3
        with:
          username: ${{ secrets.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}

      - name: Start containers
        run: docker compose up -d

      - name: Wait for MySQL, Redis
        run: |
          echo "Waiting for MySQL, Redis to be healthy..."
          for i in {1..10}; do
            docker exec factcheck-mysql mysqladmin ping -h 127.0.0.1 --silent && break
            sleep 5
          done
      - name: Run Flyway clean
        run: ./gradlew flywayClean

      - name: Run Flyway migrations
        run: ./gradlew flywayMigrate

      - name: Run Test
        run: ./gradlew test

      - name: Build (no lint, no test)
        run: ./gradlew build -x ktlintCheck -x test

      - name: Stop containers
        if: always()
        run: docker compose down -v
